import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;

import javax.swing.JOptionPane;


/**
 * Created in NetBeans IDE
 * @author Aasima Pathan
 */
public class FormGUI extends javax.swing.JFrame {

    /**
	 * 
	 */
	private int studentAgrees;
	private int supervisorAgrees;
	private String attendance = "";
	private String progress = "";
	private static final long serialVersionUID = 6205979163408148997L;
	/**
     * Creates new form FormGUI
     */
    public FormGUI() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({ "unchecked", "rawtypes" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        progressButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Section 1"));

        jLabel2.setText("Description:");

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel3.setText("Summary of outcomes and discussions:");

        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 473, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(192, 192, 192))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Progress"));

        progressButtonGroup.add(jCheckBox1);
        jCheckBox1.setText("Satisfactory");
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(ItemEvent e) {
            	itemStateChanged1(e);
			}
        });
        
        progressButtonGroup.add(jCheckBox2);
        jCheckBox2.setText("Unsatisfactory");
        jCheckBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(ItemEvent e) {
            	itemStateChanged2(e);
			}
        });

        jTextArea3.setColumns(20);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setWrapStyleWord(true);
        jScrollPane3.setViewportView(jTextArea3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jCheckBox2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addGap(5, 5, 5))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Attendance"));

        jTextArea4.setColumns(20);
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setWrapStyleWord(true);
        jScrollPane4.setViewportView(jTextArea4);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Face-to-face. (Explain where)", "Electronic - PGR in Birmingham", "Electronic - PGR has authorised absence.", "No contact - PGR on holiday.", "None of the above. (Explain why)" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	comboBoxActionPerformed(evt);
            }
        });
        
        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap())
        );

        jCheckBox3.setText("Student");
        jCheckBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(ItemEvent e) {
            	itemStateChanged3(e);
				
			}
        });

        jCheckBox4.setText("Supervisor");
        jCheckBox4.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(ItemEvent e) {
            	itemStateChanged4(e);
				
			}
        });
        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Please tick the box below before submitting: ");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(16, 16, 16)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jCheckBox3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox4)
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        populateFields();
        pack();
    }// </editor-fold>                        

   

    private void comboBoxActionPerformed(ActionEvent evt) {
		attendance = ((String) jComboBox1.getSelectedItem());
		
		//System.out.println(attendance);
	}

	private void itemStateChanged2(ItemEvent e) {
    	if (e.getStateChange() == ItemEvent.SELECTED) {
			progress = ("unsatisfactory");
		}
    	else
    		progress = "satisfactory";
	}

	private void itemStateChanged1(ItemEvent e) {
		if (e.getStateChange() == ItemEvent.SELECTED) {
			progress = ("satisfactory");
		}
		else
			progress = "unsatisfactory";
	}

	private void itemStateChanged4(ItemEvent e) {
    	   
    	
    		if (e.getStateChange() == ItemEvent.SELECTED) {
    	    	//jCheckBox4.setSelected(true);
    	        setSupervisorAgrees(1);
    	       
    	    } else {
    	       // jCheckBox4.setSelected(false);
    	        setSupervisorAgrees(0);
    	      
    	    }
    	
		
	}

    private void itemStateChanged3(ItemEvent e) {
 	   
		if (e.getStateChange() == ItemEvent.SELECTED) {
	    	//jCheckBox3.setSelected(true);
	        setStudentAgrees(1);
	    } else {
	       // jCheckBox3.setSelected(false);
	        setStudentAgrees(0);
	    }
	
	
}

    // Save button
  /*  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    	//getText
    	//send to DB
		
		if (Client.getUser().getUsertype() == 1){
			Client.getForm().setDescription(jTextArea1.getText());
			Client.getForm().setSummary(jTextArea2.getText());
			Client.formUpdate();
		}
		else if (Client.getUser().getUsertype() == 2){
			Client.getForm().setDescription(jTextArea1.getText());
			Client.getForm().setSummary(jTextArea2.getText());
			Client.getForm().setAttendance(attendance);
			Client.getForm().setAttendanceExtra(jTextArea4.getText());
			Client.getForm().setProgress(progress);
			Client.getForm().setProgressExtra(jTextArea3.getText());
			Client.formUpdate();
		}
		
    	
    }*/                                        

    // Submit button
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         

    	if (Client.getUser().getUsertype() == 1){
    		// make sure student checkbox is ticked
    		if (studentAgrees == 1){
    			// if there are no changes - set studentAgrees
    			if (Client.getForm().getDescription() == null || Client.getForm().getSummary() == null || (Client.getForm().getDescription().equals(jTextArea1.getText())) && (Client.getForm().getSummary().equals(jTextArea2.getText()))){
    				Client.getForm().setDescription(jTextArea1.getText());
        			Client.getForm().setSummary(jTextArea2.getText());
    				Client.getForm().setStudentagrees(studentAgrees);
    				Client.formUpdate();
    				
    				dispose();
    			} else {
    			// else if there are changes - store the new information & notify supervisor of changes
    			Client.getForm().setDescription(jTextArea1.getText());
    			Client.getForm().setSummary(jTextArea2.getText());
    			Client.getForm().setStudentagrees(studentAgrees);
    			supervisorAgrees = 0;
    			Client.getForm().setSupervisoragrees(supervisorAgrees);
    			Client.formUpdate();
    			
    			dispose();
    			// send email to supervisor (NotifyEmail class - should have dialog box 'notification email sent to your supervisor'
				// dispose
    			
    			}
    		}
    		else
    			JOptionPane.showMessageDialog(null, "Please tick the student box before submitting");
    		// otherwise pop-up dialog box
    	}
    	
    	else if (Client.getUser().getUsertype() == 2){
    		
    		if (supervisorAgrees == 1){
       			if (Client.getForm().getDescription() == null || Client.getForm().getSummary() == null || (Client.getForm().getDescription().equals(jTextArea1.getText())) && (Client.getForm().getSummary().equals(jTextArea2.getText()))){
    				Client.getForm().setDescription(jTextArea1.getText());
        			Client.getForm().setSummary(jTextArea2.getText());
    				
        			Client.getForm().setAttendance((String)jComboBox1.getSelectedItem());
        			Client.getForm().setAttendanceExtra(jTextArea4.getText());
    				Client.getForm().setProgress(progress);
    				Client.getForm().setProgressExtra(jTextArea3.getText());
    				
    				Client.getForm().setSupervisoragrees(supervisorAgrees);
    				Client.formUpdate();
    				
    				dispose();
    			}
    			else {
    				
    				Client.getForm().setDescription(jTextArea1.getText());
        			Client.getForm().setSummary(jTextArea2.getText());
    				
        			Client.getForm().setAttendance((String)jComboBox1.getSelectedItem());
        			Client.getForm().setAttendanceExtra(jTextArea4.getText());
    				Client.getForm().setProgress(progress);
    				Client.getForm().setProgressExtra(jTextArea3.getText());
    				
    				Client.getForm().setSupervisoragrees(supervisorAgrees);
    				studentAgrees = 0;
    				Client.getForm().setStudentagrees(studentAgrees);
    				Client.formUpdate();
    				
    				// send email to student (NotifyEmail class - should have dialog box 'notification email sent to Student'
    				// dispose
    				
    				dispose();
    			}
    		}
    		else
    			JOptionPane.showMessageDialog(null, "Please tick the supervisor box before submitting");
    	}
    } 
    
    
    private void populateFields(){
    	
    	
    	if (Client.getForm().getDescription() ==(null)){
    		jTextArea1.setText("");
    	}
    	else
    		jTextArea1.setText(Client.getForm().getDescription()); // retrieve any existing text
		
    	if (Client.getForm().getSummary() ==null){
    		jTextArea2.setText("");
    	}
    	else
    		jTextArea2.setText(Client.getForm().getSummary());
    	

    	if (Client.getForm().getProgressExtra()==null){
    		jTextArea3.setText("");
    	}
    	else 
    		jTextArea3.setText(Client.getForm().getProgressExtra());
    	

    	if (Client.getForm().getAttendanceExtra()==(null)){
    		jTextArea4.setText("");
    	}
    	else
    		jTextArea4.setText(Client.getForm().getAttendanceExtra());
    	
    	if (Client.getForm().getProgress() ==null || ((!(Client.getForm().getProgress() == null)) && Client.getForm().getProgress().equals("unsatisfactory")) ){
    		jCheckBox1.setSelected(false);
    	}else
    		jCheckBox1.setSelected(true);
    	
    	
    	if (Client.getForm().getSupervisoragrees() == 1 ){
			jCheckBox4.setSelected(true);
			setSupervisorAgrees(1);
		} 
		else {
			jCheckBox4.setSelected(false);
			setSupervisorAgrees(0);
		}
		
		if (Client.getForm().getStudentagrees() == 1 ){
			jCheckBox3.setSelected(true);
			setStudentAgrees(1);
		} 
		else {
			jCheckBox3.setSelected(false);
			setStudentAgrees(0);
		}
    	
    	if (Client.getForm().getAttendance() == null){
    		jComboBox1.setSelectedIndex(0);
    	}
    	else if(Client.getForm().getAttendance().equals("Face-to-face. (Explain where)")){
			jComboBox1.setSelectedIndex(1);
			attendance = ((String) jComboBox1.getSelectedItem());
		} else if (Client.getForm().getAttendance().equals("Electronic - PGR in Birmingham")){
			jComboBox1.setSelectedIndex(2);
			attendance = ((String) jComboBox1.getSelectedItem());
		} else if (Client.getForm().getAttendance().equals("Electronic - PGR has authorised absence")){
			jComboBox1.setSelectedIndex(3);
			attendance =((String) jComboBox1.getSelectedItem());
		} else if (Client.getForm().getAttendance().equals("No contact - PGR on holiday")){
			jComboBox1.setSelectedIndex(4);
			attendance = ((String) jComboBox1.getSelectedItem());
		} else if (Client.getForm().getAttendance().equals("None of the above. (Explain why)")){
			jComboBox1.setSelectedIndex(5);
			attendance = ((String) jComboBox1.getSelectedItem());
		} else
			jComboBox1.setSelectedIndex(0);
		
    	
    	if(Client.getUser().getUsertype() == 1){
    		jCheckBox4.setVisible(false); // shouldn't be able to change supervisor agrees
    		jPanel3.setVisible(false); // Hide form sections that are not to be filled out by Student
    		jPanel4.setVisible(false); 
    		
    	}
    	
    	else if (Client.getUser().getUsertype() == 2){
    		jPanel3.setVisible(true);
    		jPanel4.setVisible(true);
    		jCheckBox3.setVisible(false);
    	}
    	
    	
    }
    
    
    /**
	 * @return the progress
	 */
	public String getProgress() {
		return progress;
	}

	/**
	 * @param progress the progress to set
	 */
	public void setProgress(String progress) {
		this.progress = progress;
	}

	/**
	 * @return the attendance
	 */
	public String getAttendance() {
		return attendance;
	}

	/**
	 * @param attendance the attendance to set
	 */
	public void setAttendance(String attendance) {
		this.attendance = attendance;
	}

	/**
	 * @return the studentAgrees
	 */
	public int getStudentAgrees() {
		return studentAgrees;
	}

	/**
	 * @param studentAgrees the studentAgrees to set
	 */
	public void setStudentAgrees(int studentAgrees) {
		this.studentAgrees = studentAgrees;
	}

	/**
	 * @return the supervisorAgrees
	 */
	public int getSupervisorAgrees() {
		return supervisorAgrees;
	}

	/**
	 * @param supervisorAgrees the supervisorAgrees to set
	 */
	public void setSupervisorAgrees(int supervisorAgrees) {
		this.supervisorAgrees = supervisorAgrees;
	}

	/**
     * @param args the command line arguments
     */
    public void launch() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
     /*   try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormGUI().setVisible(true);
            }
        });
    }

    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    @SuppressWarnings("rawtypes")
	private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.ButtonGroup progressButtonGroup;
    // End of variables declaration                   
}


